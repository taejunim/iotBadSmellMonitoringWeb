<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="iotBadSmellMonitoring.member.service.impl.AttendMapper">

    <!--출석 회원 리스트 목록-->
    <select id="attendUserList" parameterType="joinVO" resultType="egovMap">

     SELECT USER_ID                                      USER_ID
          , USER_NAME                                    USER_NAME
          , USER_REGION_MASTER                           USER_REGION_MASTER
          , USER_REGION_DETAIL                           USER_REGION_DETAIL
          , F_GET_CODE_NAME('REM', USER_REGION_MASTER)   USER_REGION_MASTER_NAME
          , F_GET_CODE_NAME('RGD', USER_REGION_DETAIL)   USER_REGION_DETAIL_NAME

       FROM tb_user

      WHERE 1 = 1

        AND USER_TYPE NOT IN ('002')
        AND REG_GBN   NOT IN ('003')
        <choose>
            <when test="commonGbn1 == 'view' and commonGbn1.equals('view')">                        <!--VIEW -->

                <if test="userName != null and !userName.equals('')" >
                    AND LOWER(USER_NAME) LIKE LOWER('%${userName}%')
                </if>
                <if test="userRegionMaster != null and !userRegionMaster.equals('')" >
                    AND USER_REGION_MASTER = #{userRegionMaster}
                </if>
                <if test="userRegionDetail != null and !userRegionDetail.equals('')" >
                    AND USER_REGION_DETAIL = #{userRegionDetail}
                </if>

                ORDER BY USER_NAME ASC

                LIMIT #{recordCountPerPage} OFFSET #{firstIndex}

            </when>
            <otherwise>                                                                             <!--EXCEL -->

                ORDER BY USER_NAME ASC

            </otherwise>
        </choose>

    </select>

    <!--출석 회원 총 카운트-->
    <select id="attendUserTotalCnt" parameterType="joinVO" resultType="int">

     SELECT COUNT(USER_ID)  USER_CNT

       FROM tb_user

      WHERE 1 = 1

        AND USER_TYPE NOT IN ('002')
        AND REG_GBN   NOT IN ('003')
        <if test="userName != null and !userName.equals('')" >
            AND LOWER(USER_NAME) LIKE LOWER('%${userName}%')
        </if>
        <if test="userRegionMaster != null and !userRegionMaster.equals('')" >
            AND USER_REGION_MASTER = #{userRegionMaster}
        </if>
        <if test="userRegionDetail != null and !userRegionDetail.equals('')" >
            AND USER_REGION_DETAIL = #{userRegionDetail}
        </if>

    </select>

    <!--출석 여부 확인 리스트 목록-->
    <select id="attendUserCheckList" parameterType="joinVO" resultType="egovMap">

        <![CDATA[

                SELECT          t2.DATE_YMD DATE_YMD
                              , t2.REG_COUNT REG_COUNT
                              , (CASE
                                    WHEN DATE_FORMAT(t2.DATE_YMD, '%Y-%m-%d') > DATE_FORMAT(now(), '%Y-%m-%d') THEN '-'
                                    WHEN REG_COUNT >= 3 THEN 'O'
                                    WHEN REG_COUNT < 3 THEN 'X' END) AS CHECK_RESULT

                FROM (
                         SELECT t1.date_ymd                                DATE_YMD
                              , COUNT(DATE_FORMAT(tsr.REG_DT, '%Y-%m-%d')) REG_COUNT

                         FROM tb_smell_register tsr
                                  RIGHT JOIN

                              (
                                  SELECT a.date_ymd
                                  FROM (
                                           SELECT #{regDt} - INTERVAL (a.a + (10 * b.a) + (100 * c.a)) DAY as date_ymd
                                           FROM (
                                                    SELECT 0 AS a
                                                    UNION ALL
                                                    SELECT 1
                                                    UNION ALL
                                                    SELECT 2
                                                    UNION ALL
                                                    SELECT 3
                                                    UNION ALL
                                                    SELECT 4
                                                    UNION ALL
                                                    SELECT 5
                                                    UNION ALL
                                                    SELECT 6
                                                    UNION ALL
                                                    SELECT 7
                                                    UNION ALL
                                                    SELECT 8
                                                    UNION ALL
                                                    SELECT 9
                                                ) AS a

                                                    CROSS JOIN (
                                               SELECT 0 AS a
                                               UNION ALL
                                               SELECT 1
                                               UNION ALL
                                               SELECT 2
                                               UNION ALL
                                               SELECT 3
                                               UNION ALL
                                               SELECT 4
                                               UNION ALL
                                               SELECT 5
                                               UNION ALL
                                               SELECT 6
                                               UNION ALL
                                               SELECT 7
                                               UNION ALL
                                               SELECT 8
                                               UNION ALL
                                               SELECT 9
                                           ) AS b

                                                    CROSS JOIN (
                                               SELECT 0 as a
                                               UNION ALL
                                               SELECT 1
                                               UNION ALL
                                               SELECT 2
                                               UNION ALL
                                               SELECT 3
                                               UNION ALL
                                               SELECT 4
                                               UNION ALL
                                               SELECT 5
                                               UNION ALL
                                               SELECT 6
                                               UNION ALL
                                               SELECT 7
                                               UNION ALL
                                               SELECT 8
                                               UNION ALL
                                               SELECT 9
                                           ) AS c
                                       ) AS a
                                  WHERE 1 = 1
                                    AND a.date_ymd LIKE CONCAT(#{searchYear},'-',#{searchMonth},'-%') -- 한달만 검색 하려고 하는경우
                              ) t1 ON t1.date_ymd = DATE_FORMAT(tsr.REG_DT, '%Y-%m-%d')
                                  AND REG_ID = #{userId}

                         GROUP BY t1.date_ymd
                         ORDER BY t1.date_ymd ASC
                     ) t2

        ]]>

    </select>

</mapper>